// Generated from ./src/formula/FormulaLexer.g4 by ANTLR 4.9.0-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';

export class FormulaLexer extends Lexer {
  public static readonly OpenParen = 1;
  public static readonly CloseParen = 2;
  public static readonly OpenBrace = 3;
  public static readonly CloseBrace = 4;
  public static readonly Comma = 5;
  public static readonly Plus = 6;
  public static readonly Minus = 7;
  public static readonly Multiply = 8;
  public static readonly Divide = 9;
  public static readonly BooleanLiteral = 10;
  public static readonly FieldLiteral = 11;
  public static readonly FunctionLiteral = 12;
  public static readonly DecimalLiteral = 13;
  public static readonly StringLiteral = 14;
  public static readonly WhiteSpaces = 15;
  public static readonly UnexpectedCharacter = 16;
  public static readonly ERROR = 2;

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = [
    'DEFAULT_TOKEN_CHANNEL',
    'HIDDEN',
    'ERROR',
  ];

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE'];

  public static readonly ruleNames: string[] = [
    'OpenParen',
    'CloseParen',
    'OpenBrace',
    'CloseBrace',
    'Comma',
    'Plus',
    'Minus',
    'Multiply',
    'Divide',
    'BooleanLiteral',
    'FieldLiteral',
    'FunctionLiteral',
    'DecimalLiteral',
    'StringLiteral',
    'WhiteSpaces',
    'UnexpectedCharacter',
    'DoubleStringCharacter',
    'SingleStringCharacter',
    'EscapeSequence',
    'CharacterEscapeSequence',
    'HexEscapeSequence',
    'UnicodeEscapeSequence',
    'ExtendedUnicodeEscapeSequence',
    'SingleEscapeCharacter',
    'NonEscapeCharacter',
    'EscapeCharacter',
    'LineContinuation',
    'HexDigit',
    'DecimalIntegerLiteral',
    'Field',
    'FieldPath',
    'FieldPathSegment',
    'FieldPathSubSegment',
  ];

  private static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "'('",
    "')'",
    "'{'",
    "'}'",
    "','",
    "'+'",
    "'-'",
    "'*'",
    "'/'",
  ];
  private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    'OpenParen',
    'CloseParen',
    'OpenBrace',
    'CloseBrace',
    'Comma',
    'Plus',
    'Minus',
    'Multiply',
    'Divide',
    'BooleanLiteral',
    'FieldLiteral',
    'FunctionLiteral',
    'DecimalLiteral',
    'StringLiteral',
    'WhiteSpaces',
    'UnexpectedCharacter',
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    FormulaLexer._LITERAL_NAMES,
    FormulaLexer._SYMBOLIC_NAMES,
    [],
  );

  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return FormulaLexer.VOCABULARY;
  }
  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(FormulaLexer._ATN, this);
  }

  // @Override
  public get grammarFileName(): string {
    return 'FormulaLexer.g4';
  }

  // @Override
  public get ruleNames(): string[] {
    return FormulaLexer.ruleNames;
  }

  // @Override
  public get serializedATN(): string {
    return FormulaLexer._serializedATN;
  }

  // @Override
  public get channelNames(): string[] {
    return FormulaLexer.channelNames;
  }

  // @Override
  public get modeNames(): string[] {
    return FormulaLexer.modeNames;
  }

  public static readonly _serializedATN: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x12\u0194\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    '"\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03' +
    '\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v' +
    '\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x05\va\n\v\x03\f\x03' +
    '\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x05\r\u0107\n\r\x03\x0E\x03\x0E' +
    '\x03\x0E\x07\x0E\u010C\n\x0E\f\x0E\x0E\x0E\u010F\v\x0E\x03\x0E\x03\x0E' +
    '\x06\x0E\u0113\n\x0E\r\x0E\x0E\x0E\u0114\x03\x0E\x05\x0E\u0118\n\x0E\x03' +
    '\x0F\x03\x0F\x07\x0F\u011C\n\x0F\f\x0F\x0E\x0F\u011F\v\x0F\x03\x0F\x03' +
    '\x0F\x03\x0F\x07\x0F\u0124\n\x0F\f\x0F\x0E\x0F\u0127\v\x0F\x03\x0F\x05' +
    '\x0F\u012A\n\x0F\x03\x10\x06\x10\u012D\n\x10\r\x10\x0E\x10\u012E\x03\x10' +
    '\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12' +
    '\x05\x12\u013B\n\x12\x03\x13\x03\x13\x03\x13\x03\x13\x05\x13\u0141\n\x13' +
    '\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x05\x14\u0148\n\x14\x03\x15\x03' +
    '\x15\x05\x15\u014C\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17' +
    '\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x06\x18\u015B' +
    '\n\x18\r\x18\x0E\x18\u015C\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03' +
    '\x1A\x03\x1B\x03\x1B\x05\x1B\u0167\n\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D' +
    '\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x07\x1E\u0171\n\x1E\f\x1E\x0E\x1E\u0174' +
    '\v\x1E\x05\x1E\u0176\n\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x07' +
    '\x1F\u017D\n\x1F\f\x1F\x0E\x1F\u0180\v\x1F\x03\x1F\x03\x1F\x03 \x03 \x07' +
    ' \u0186\n \f \x0E \u0189\v \x03!\x03!\x07!\u018D\n!\f!\x0E!\u0190\v!\x03' +
    '"\x03"\x03"\x02\x02\x02#\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02' +
    '\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02' +
    '\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x02%' +
    "\x02\x02'\x02\x02)\x02\x02+\x02\x02-\x02\x02/\x02\x021\x02\x023\x02\x02" +
    '5\x02\x027\x02\x029\x02\x02;\x02\x02=\x02\x02?\x02\x02A\x02\x02C\x02\x02' +
    '\x03\x02\x0E\x03\x022;\x06\x02\v\v\r\x0E""\xA2\xA2\x06\x02\f\f\x0F\x0F' +
    '$$^^\x06\x02\f\f\x0F\x0F))^^\v\x02$$))^^ddhhppttvvxx\x0E\x02\f\f\x0F\x0F' +
    '$$))2;^^ddhhppttvxzz\x05\x022;wwzz\x05\x02\f\f\x0F\x0F\u202A\u202B\x05' +
    '\x022;CHch\x03\x023;\x04\x02C\\c|\x06\x022;C\\aac|\x02\u01BC\x02\x03\x03' +
    '\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03' +
    '\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02' +
    '\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02' +
    '\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02' +
    '\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02' +
    '\x02\x02\x03E\x03\x02\x02\x02\x05G\x03\x02\x02\x02\x07I\x03\x02\x02\x02' +
    '\tK\x03\x02\x02\x02\vM\x03\x02\x02\x02\rO\x03\x02\x02\x02\x0FQ\x03\x02' +
    '\x02\x02\x11S\x03\x02\x02\x02\x13U\x03\x02\x02\x02\x15`\x03\x02\x02\x02' +
    '\x17b\x03\x02\x02\x02\x19\u0106\x03\x02\x02\x02\x1B\u0117\x03\x02\x02' +
    '\x02\x1D\u0129\x03\x02\x02\x02\x1F\u012C\x03\x02\x02\x02!\u0132\x03\x02' +
    "\x02\x02#\u013A\x03\x02\x02\x02%\u0140\x03\x02\x02\x02'\u0147\x03\x02" +
    '\x02\x02)\u014B\x03\x02\x02\x02+\u014D\x03\x02\x02\x02-\u0151\x03\x02' +
    '\x02\x02/\u0157\x03\x02\x02\x021\u0160\x03\x02\x02\x023\u0162\x03\x02' +
    '\x02\x025\u0166\x03\x02\x02\x027\u0168\x03\x02\x02\x029\u016B\x03\x02' +
    '\x02\x02;\u0175\x03\x02\x02\x02=\u0177\x03\x02\x02\x02?\u0183\x03\x02' +
    '\x02\x02A\u018A\x03\x02\x02\x02C\u0191\x03\x02\x02\x02EF\x07*\x02\x02' +
    'F\x04\x03\x02\x02\x02GH\x07+\x02\x02H\x06\x03\x02\x02\x02IJ\x07}\x02\x02' +
    'J\b\x03\x02\x02\x02KL\x07\x7F\x02\x02L\n\x03\x02\x02\x02MN\x07.\x02\x02' +
    'N\f\x03\x02\x02\x02OP\x07-\x02\x02P\x0E\x03\x02\x02\x02QR\x07/\x02\x02' +
    'R\x10\x03\x02\x02\x02ST\x07,\x02\x02T\x12\x03\x02\x02\x02UV\x071\x02\x02' +
    'V\x14\x03\x02\x02\x02WX\x07v\x02\x02XY\x07t\x02\x02YZ\x07w\x02\x02Za\x07' +
    'g\x02\x02[\\\x07h\x02\x02\\]\x07c\x02\x02]^\x07n\x02\x02^_\x07u\x02\x02' +
    '_a\x07g\x02\x02`W\x03\x02\x02\x02`[\x03\x02\x02\x02a\x16\x03\x02\x02\x02' +
    'bc\x05=\x1F\x02c\x18\x03\x02\x02\x02de\x07K\x02\x02e\u0107\x07H\x02\x02' +
    'fg\x07C\x02\x02gh\x07P\x02\x02h\u0107\x07F\x02\x02ij\x07Q\x02\x02j\u0107' +
    '\x07T\x02\x02kl\x07Z\x02\x02lm\x07Q\x02\x02m\u0107\x07T\x02\x02no\x07' +
    'P\x02\x02op\x07Q\x02\x02p\u0107\x07V\x02\x02qr\x07C\x02\x02rs\x07X\x02' +
    '\x02st\x07G\x02\x02tu\x07T\x02\x02uv\x07C\x02\x02vw\x07I\x02\x02w\u0107' +
    '\x07G\x02\x02xy\x07E\x02\x02yz\x07Q\x02\x02z{\x07W\x02\x02{|\x07P\x02' +
    '\x02|\u0107\x07V\x02\x02}~\x07E\x02\x02~\x7F\x07Q\x02\x02\x7F\x80\x07' +
    'W\x02\x02\x80\x81\x07P\x02\x02\x81\x82\x07V\x02\x02\x82\u0107\x07C\x02' +
    '\x02\x83\x84\x07E\x02\x02\x84\x85\x07Q\x02\x02\x85\x86\x07W\x02\x02\x86' +
    '\x87\x07P\x02\x02\x87\x88\x07V\x02\x02\x88\x89\x07K\x02\x02\x89\u0107' +
    '\x07H\x02\x02\x8A\x8B\x07O\x02\x02\x8B\x8C\x07C\x02\x02\x8C\u0107\x07' +
    'Z\x02\x02\x8D\x8E\x07O\x02\x02\x8E\x8F\x07K\x02\x02\x8F\u0107\x07P\x02' +
    '\x02\x90\x91\x07T\x02\x02\x91\x92\x07Q\x02\x02\x92\x93\x07W\x02\x02\x93' +
    '\x94\x07P\x02\x02\x94\u0107\x07F\x02\x02\x95\x96\x07K\x02\x02\x96\x97' +
    '\x07P\x02\x02\x97\u0107\x07V\x02\x02\x98\x99\x07O\x02\x02\x99\x9A\x07' +
    'Q\x02\x02\x9A\u0107\x07F\x02\x02\x9B\x9C\x07R\x02\x02\x9C\x9D\x07T\x02' +
    '\x02\x9D\x9E\x07Q\x02\x02\x9E\x9F\x07F\x02\x02\x9F\xA0\x07W\x02\x02\xA0' +
    '\xA1\x07E\x02\x02\xA1\u0107\x07V\x02\x02\xA2\xA3\x07U\x02\x02\xA3\xA4' +
    '\x07W\x02\x02\xA4\u0107\x07O\x02\x02\xA5\xA6\x07U\x02\x02\xA6\xA7\x07' +
    'W\x02\x02\xA7\xA8\x07O\x02\x02\xA8\xA9\x07R\x02\x02\xA9\xAA\x07T\x02\x02' +
    '\xAA\xAB\x07Q\x02\x02\xAB\xAC\x07F\x02\x02\xAC\xAD\x07W\x02\x02\xAD\xAE' +
    '\x07E\x02\x02\xAE\u0107\x07V\x02\x02\xAF\xB0\x07U\x02\x02\xB0\xB1\x07' +
    'W\x02\x02\xB1\xB2\x07O\x02\x02\xB2\xB3\x07K\x02\x02\xB3\u0107\x07H\x02' +
    '\x02\xB4\xB5\x07T\x02\x02\xB5\xB6\x07Q\x02\x02\xB6\xB7\x07W\x02\x02\xB7' +
    '\xB8\x07P\x02\x02\xB8\xB9\x07F\x02\x02\xB9\xBA\x07W\x02\x02\xBA\u0107' +
    '\x07R\x02\x02\xBB\xBC\x07T\x02\x02\xBC\xBD\x07Q\x02\x02\xBD\xBE\x07W\x02' +
    '\x02\xBE\xBF\x07P\x02\x02\xBF\xC0\x07F\x02\x02\xC0\xC1\x07F\x02\x02\xC1' +
    '\xC2\x07Q\x02\x02\xC2\xC3\x07Y\x02\x02\xC3\u0107\x07P\x02\x02\xC4\xC5' +
    '\x07R\x02\x02\xC5\xC6\x07Q\x02\x02\xC6\xC7\x07Y\x02\x02\xC7\xC8\x07G\x02' +
    '\x02\xC8\u0107\x07T\x02\x02\xC9\xCA\x07N\x02\x02\xCA\u0107\x07P\x02\x02' +
    '\xCB\xCC\x07U\x02\x02\xCC\xCD\x07S\x02\x02\xCD\xCE\x07T\x02\x02\xCE\u0107' +
    '\x07V\x02\x02\xCF\xD0\x07[\x02\x02\xD0\xD1\x07G\x02\x02\xD1\xD2\x07C\x02' +
    '\x02\xD2\u0107\x07T\x02\x02\xD3\xD4\x07O\x02\x02\xD4\xD5\x07Q\x02\x02' +
    '\xD5\xD6\x07P\x02\x02\xD6\xD7\x07V\x02\x02\xD7\u0107\x07J\x02\x02\xD8' +
    '\xD9\x07F\x02\x02\xD9\xDA\x07C\x02\x02\xDA\u0107\x07[\x02\x02\xDB\xDC' +
    '\x07J\x02\x02\xDC\xDD\x07Q\x02\x02\xDD\xDE\x07W\x02\x02\xDE\u0107\x07' +
    'T\x02\x02\xDF\xE0\x07O\x02\x02\xE0\xE1\x07K\x02\x02\xE1\xE2\x07P\x02\x02' +
    '\xE2\xE3\x07W\x02\x02\xE3\xE4\x07V\x02\x02\xE4\u0107\x07G\x02\x02\xE5' +
    '\xE6\x07U\x02\x02\xE6\xE7\x07G\x02\x02\xE7\xE8\x07E\x02\x02\xE8\xE9\x07' +
    'Q\x02\x02\xE9\xEA\x07P\x02\x02\xEA\u0107\x07F\x02\x02\xEB\xEC\x07F\x02' +
    '\x02\xEC\xED\x07C\x02\x02\xED\xEE\x07V\x02\x02\xEE\u0107\x07G\x02\x02' +
    '\xEF\xF0\x07E\x02\x02\xF0\xF1\x07W\x02\x02\xF1\xF2\x07T\x02\x02\xF2\xF3' +
    '\x07F\x02\x02\xF3\xF4\x07C\x02\x02\xF4\xF5\x07V\x02\x02\xF5\u0107\x07' +
    'G\x02\x02\xF6\xF7\x07P\x02\x02\xF7\xF8\x07Q\x02\x02\xF8\u0107\x07Y\x02' +
    '\x02\xF9\xFA\x07F\x02\x02\xFA\xFB\x07C\x02\x02\xFB\xFC\x07[\x02\x02\xFC' +
    '\u0107\x07U\x02\x02\xFD\xFE\x07F\x02\x02\xFE\xFF\x07C\x02\x02\xFF\u0100' +
    '\x07V\x02\x02\u0100\u0101\x07G\x02\x02\u0101\u0102\x07F\x02\x02\u0102' +
    '\u0103\x07G\x02\x02\u0103\u0104\x07N\x02\x02\u0104\u0105\x07V\x02\x02' +
    '\u0105\u0107\x07C\x02\x02\u0106d\x03\x02\x02\x02\u0106f\x03\x02\x02\x02' +
    '\u0106i\x03\x02\x02\x02\u0106k\x03\x02\x02\x02\u0106n\x03\x02\x02\x02' +
    '\u0106q\x03\x02\x02\x02\u0106x\x03\x02\x02\x02\u0106}\x03\x02\x02\x02' +
    '\u0106\x83\x03\x02\x02\x02\u0106\x8A\x03\x02\x02\x02\u0106\x8D\x03\x02' +
    '\x02\x02\u0106\x90\x03\x02\x02\x02\u0106\x95\x03\x02\x02\x02\u0106\x98' +
    '\x03\x02\x02\x02\u0106\x9B\x03\x02\x02\x02\u0106\xA2\x03\x02\x02\x02\u0106' +
    '\xA5\x03\x02\x02\x02\u0106\xAF\x03\x02\x02\x02\u0106\xB4\x03\x02\x02\x02' +
    '\u0106\xBB\x03\x02\x02\x02\u0106\xC4\x03\x02\x02\x02\u0106\xC9\x03\x02' +
    '\x02\x02\u0106\xCB\x03\x02\x02\x02\u0106\xCF\x03\x02\x02\x02\u0106\xD3' +
    '\x03\x02\x02\x02\u0106\xD8\x03\x02\x02\x02\u0106\xDB\x03\x02\x02\x02\u0106' +
    '\xDF\x03\x02\x02\x02\u0106\xE5\x03\x02\x02\x02\u0106\xEB\x03\x02\x02\x02' +
    '\u0106\xEF\x03\x02\x02\x02\u0106\xF6\x03\x02\x02\x02\u0106\xF9\x03\x02' +
    '\x02\x02\u0106\xFD\x03\x02\x02\x02\u0107\x1A\x03\x02\x02\x02\u0108\u0109' +
    '\x05;\x1E\x02\u0109\u010D\x070\x02\x02\u010A\u010C\t\x02\x02\x02\u010B' +
    '\u010A\x03\x02\x02\x02\u010C\u010F\x03\x02\x02\x02\u010D\u010B\x03\x02' +
    '\x02\x02\u010D\u010E\x03\x02\x02\x02\u010E\u0118\x03\x02\x02\x02\u010F' +
    '\u010D\x03\x02\x02\x02\u0110\u0112\x070\x02\x02\u0111\u0113\t\x02\x02' +
    '\x02\u0112\u0111\x03\x02\x02\x02\u0113\u0114\x03\x02\x02\x02\u0114\u0112' +
    '\x03\x02\x02\x02\u0114\u0115\x03\x02\x02\x02\u0115\u0118\x03\x02\x02\x02' +
    '\u0116\u0118\x05;\x1E\x02\u0117\u0108\x03\x02\x02\x02\u0117\u0110\x03' +
    '\x02\x02\x02\u0117\u0116\x03\x02\x02\x02\u0118\x1C\x03\x02\x02\x02\u0119' +
    '\u011D\x07$\x02\x02\u011A\u011C\x05#\x12\x02\u011B\u011A\x03\x02\x02\x02' +
    '\u011C\u011F\x03\x02\x02\x02\u011D\u011B\x03\x02\x02\x02\u011D\u011E\x03' +
    '\x02\x02\x02\u011E\u0120\x03\x02\x02\x02\u011F\u011D\x03\x02\x02\x02\u0120' +
    '\u012A\x07$\x02\x02\u0121\u0125\x07)\x02\x02\u0122\u0124\x05%\x13\x02' +
    '\u0123\u0122\x03\x02\x02\x02\u0124\u0127\x03\x02\x02\x02\u0125\u0123\x03' +
    '\x02\x02\x02\u0125\u0126\x03\x02\x02\x02\u0126\u0128\x03\x02\x02\x02\u0127' +
    '\u0125\x03\x02\x02\x02\u0128\u012A\x07)\x02\x02\u0129\u0119\x03\x02\x02' +
    '\x02\u0129\u0121\x03\x02\x02\x02\u012A\x1E\x03\x02\x02\x02\u012B\u012D' +
    '\t\x03\x02\x02\u012C\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02' +
    '\u012E\u012C\x03\x02\x02\x02\u012E\u012F\x03\x02\x02\x02\u012F\u0130\x03' +
    '\x02\x02\x02\u0130\u0131\b\x10\x02\x02\u0131 \x03\x02\x02\x02\u0132\u0133' +
    '\v\x02\x02\x02\u0133\u0134\x03\x02\x02\x02\u0134\u0135\b\x11\x03\x02\u0135' +
    '"\x03\x02\x02\x02\u0136\u013B\n\x04\x02\x02\u0137\u0138\x07^\x02\x02' +
    "\u0138\u013B\x05'\x14\x02\u0139\u013B\x057\x1C\x02\u013A\u0136\x03\x02" +
    '\x02\x02\u013A\u0137\x03\x02\x02\x02\u013A\u0139\x03\x02\x02\x02\u013B' +
    '$\x03\x02\x02\x02\u013C\u0141\n\x05\x02\x02\u013D\u013E\x07^\x02\x02\u013E' +
    "\u0141\x05'\x14\x02\u013F\u0141\x057\x1C\x02\u0140\u013C\x03\x02\x02" +
    '\x02\u0140\u013D\x03\x02\x02\x02\u0140\u013F\x03\x02\x02\x02\u0141&\x03' +
    '\x02\x02\x02\u0142\u0148\x05)\x15\x02\u0143\u0148\x072\x02\x02\u0144\u0148' +
    '\x05+\x16\x02\u0145\u0148\x05-\x17\x02\u0146\u0148\x05/\x18\x02\u0147' +
    '\u0142\x03\x02\x02\x02\u0147\u0143\x03\x02\x02\x02\u0147\u0144\x03\x02' +
    '\x02\x02\u0147\u0145\x03\x02\x02\x02\u0147\u0146\x03\x02\x02\x02\u0148' +
    '(\x03\x02\x02\x02\u0149\u014C\x051\x19\x02\u014A\u014C\x053\x1A\x02\u014B' +
    '\u0149\x03\x02\x02\x02\u014B\u014A\x03\x02\x02\x02\u014C*\x03\x02\x02' +
    '\x02\u014D\u014E\x07z\x02\x02\u014E\u014F\x059\x1D\x02\u014F\u0150\x05' +
    '9\x1D\x02\u0150,\x03\x02\x02\x02\u0151\u0152\x07w\x02\x02\u0152\u0153' +
    '\x059\x1D\x02\u0153\u0154\x059\x1D\x02\u0154\u0155\x059\x1D\x02\u0155' +
    '\u0156\x059\x1D\x02\u0156.\x03\x02\x02\x02\u0157\u0158\x07w\x02\x02\u0158' +
    '\u015A\x07}\x02\x02\u0159\u015B\x059\x1D\x02\u015A\u0159\x03\x02\x02\x02' +
    '\u015B\u015C\x03\x02\x02\x02\u015C\u015A\x03\x02\x02\x02\u015C\u015D\x03' +
    '\x02\x02\x02\u015D\u015E\x03\x02\x02\x02\u015E\u015F\x07\x7F\x02\x02\u015F' +
    '0\x03\x02\x02\x02\u0160\u0161\t\x06\x02\x02\u01612\x03\x02\x02\x02\u0162' +
    '\u0163\n\x07\x02\x02\u01634\x03\x02\x02\x02\u0164\u0167\x051\x19\x02\u0165' +
    '\u0167\t\b\x02\x02\u0166\u0164\x03\x02\x02\x02\u0166\u0165\x03\x02\x02' +
    '\x02\u01676\x03\x02\x02\x02\u0168\u0169\x07^\x02\x02\u0169\u016A\t\t\x02' +
    '\x02\u016A8\x03\x02\x02\x02\u016B\u016C\t\n\x02\x02\u016C:\x03\x02\x02' +
    '\x02\u016D\u0176\x072\x02\x02\u016E\u0172\t\v\x02\x02\u016F\u0171\t\x02' +
    '\x02\x02\u0170\u016F\x03\x02\x02\x02\u0171\u0174\x03\x02\x02\x02\u0172' +
    '\u0170\x03\x02\x02\x02\u0172\u0173\x03\x02\x02\x02\u0173\u0176\x03\x02' +
    '\x02\x02\u0174\u0172\x03\x02\x02\x02\u0175\u016D\x03\x02\x02\x02\u0175' +
    '\u016E\x03\x02\x02\x02\u0176<\x03\x02\x02\x02\u0177\u0178\x07}\x02\x02' +
    '\u0178\u0179\x07#\x02\x02\u0179\u017A\x03\x02\x02\x02\u017A\u017E\x05' +
    'A!\x02\u017B\u017D\x05C"\x02\u017C\u017B\x03\x02\x02\x02\u017D\u0180' +
    '\x03\x02\x02\x02\u017E\u017C\x03\x02\x02\x02\u017E\u017F\x03\x02\x02\x02' +
    '\u017F\u0181\x03\x02\x02\x02\u0180\u017E\x03\x02\x02\x02\u0181\u0182\x07' +
    '\x7F\x02\x02\u0182>\x03\x02\x02\x02\u0183\u0187\x05A!\x02\u0184\u0186' +
    '\x05C"\x02\u0185\u0184\x03\x02\x02\x02\u0186\u0189\x03\x02\x02\x02\u0187' +
    '\u0185\x03\x02\x02\x02\u0187\u0188\x03\x02\x02\x02\u0188@\x03\x02\x02' +
    '\x02\u0189\u0187\x03\x02\x02\x02\u018A\u018E\t\f\x02\x02\u018B\u018D\t' +
    '\r\x02\x02\u018C\u018B\x03\x02\x02\x02\u018D\u0190\x03\x02\x02\x02\u018E' +
    '\u018C\x03\x02\x02\x02\u018E\u018F\x03\x02\x02\x02\u018FB\x03\x02\x02' +
    '\x02\u0190\u018E\x03\x02\x02\x02\u0191\u0192\x070\x02\x02\u0192\u0193' +
    '\x05A!\x02\u0193D\x03\x02\x02\x02\x17\x02`\u0106\u010D\u0114\u0117\u011D' +
    '\u0125\u0129\u012E\u013A\u0140\u0147\u014B\u015C\u0166\u0172\u0175\u017E' +
    '\u0187\u018E\x04\x02\x03\x02\x02\x04\x02';
  public static __ATN: ATN;
  public static get _ATN(): ATN {
    if (!FormulaLexer.__ATN) {
      FormulaLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(FormulaLexer._serializedATN),
      );
    }

    return FormulaLexer.__ATN;
  }
}
